use std::sync::Arc;

use ethers::{
    abi::Address,
    contract::abigen,
    providers::{Http, Provider, RetryClient},
};

/// THIS IS A GENERATED FILE. DO NOT MODIFY MANUALLY.
///
/// This file was auto generated by rindexer - https://github.com/joshstevens19/rindexer.
/// Any manual changes to this file will be overwritten.
use super::networks::get_ethereum_provider;

abigen!(USDT, "./abis/erc20-abi.json");

pub fn usdt_contract() -> USDT<Arc<Provider<RetryClient<Http>>>> {
    let address: Address =
        "0xdac17f958d2ee523a2206206994597c13d831ec7".parse().expect("Invalid address");

    USDT::new(address, Arc::new(get_ethereum_provider().clone()))
}
